[
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Test message 2.\"\r\n- Anonymous",
    "PostAfter": "2015-08-21T08:54:00",
    "DoNotPostAfter": "2015-08-24T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Test message 2.\"\r\n- Anonymous",
    "PostAfter": "2015-08-26T17:09:30",
    "DoNotPostAfter": "2015-08-27T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Test message 2.\"\r\n- Anonymous",
    "PostAfter": "2015-08-26T17:10:00",
    "DoNotPostAfter": "2015-08-27T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Test message 2.\"\r\n- Anonymous",
    "PostAfter": "2015-08-26T17:10:00",
    "DoNotPostAfter": "2015-08-27T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Test message 3.\"\r\n- Anonymous",
    "PostAfter": "2015-08-20T17:28:00",
    "DoNotPostAfter": "2015-08-24T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#3d02a4c74d1741af96d02",
    "Message": ">\"Quality is everyone's responsibility.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-08-24T08:50:00",
    "DoNotPostAfter": "2015-08-24T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Quality is everyone's responsibility.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-08-24T09:10:00",
    "DoNotPostAfter": "2015-08-24T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Innovation comes from people who take joy in their work.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-08-25T09:08:00",
    "DoNotPostAfter": "2015-08-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Amateurs work until they get it right. Professionals work until they can’t get it wrong.\"\r\n- Author Unknown",
    "PostAfter": "2015-08-26T08:58:00",
    "DoNotPostAfter": "2015-08-26T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Information is not knowledge. Let’s not confuse the two.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-08-27T09:05:00",
    "DoNotPostAfter": "2015-08-27T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Confusing common causes with special causes will only make things worse.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-08-28T09:01:00",
    "DoNotPostAfter": "2015-08-28T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\"\r\n- Principles behind the Agile Manifesto",
    "PostAfter": "2015-08-31T09:02:00",
    "DoNotPostAfter": "2015-08-31T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Quality is pride of workmanship.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-09-01T09:05:00",
    "DoNotPostAfter": "2015-09-01T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"The biggest cause of failure in software-intensive systems is not technical failure; it’s building the wrong thing.\"\r\n― Mary Poppendieck",
    "PostAfter": "2015-09-02T09:01:00",
    "DoNotPostAfter": "2015-09-02T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Improve quality, you automatically improve productivity.\"\r\n― W. Edwards Deming",
    "PostAfter": "2015-09-03T09:04:00",
    "DoNotPostAfter": "2015-09-03T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"The most important practice for continuous integration to work properly is frequent check-ins to trunk or mainline. You should be checking in your code at least a couple of times a day.\"\r\n― Jez Humble & David Farley",
    "PostAfter": "2015-09-07T09:00:00",
    "DoNotPostAfter": "2015-09-07T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Enker",
    "Channel": "#dev-general",
    "Message": "But that doesn't scale. 50 or 100 people all pushing directly to mainline sounds like a horrible mess to me. I'll have to merge all the time! How would you ever get anything deployed?",
    "PostAfter": "2015-09-07T09:01:00",
    "DoNotPostAfter": "2015-09-07T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "Good point. One possible solution is to have more mainlines. That's basically the approach we're taking with independent bounded contexts. Each context has its own mainline that can deploy independently of the others.",
    "PostAfter": "2015-09-07T09:01:30",
    "DoNotPostAfter": "2015-09-07T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"If you adopt only one agile practice, let it be retrospectives. Everything else will follow.\"\r\n- Woody Zuill",
    "PostAfter": "2015-09-08T09:03:00",
    "DoNotPostAfter": "2015-09-08T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Handing off all the details about the story to someone else to build doesn’t work. Don’t do that.\"\r\n- Jeff Patton",
    "PostAfter": "2015-09-09T09:01:00",
    "DoNotPostAfter": "2015-09-09T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"If it hurts, do it more frequently, and bring the pain forward.\"\r\n- Jez Humble & David Farley",
    "PostAfter": "2015-09-10T09:02:00",
    "DoNotPostAfter": "2015-09-10T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Enker",
    "Channel": "#dev-general",
    "Message": "Breaking the web site hurts. So that means I should break the web site more often, right? :troll:",
    "PostAfter": "2015-09-10T09:02:20",
    "DoNotPostAfter": "2015-09-10T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "Well, the quote doesn't say that you should do bad things more often. It says that you should do things that hurt, or rather that are difficult, more often. Does breaking the web site hurt because it's hard to fix? Maybe you should work on fixing it more frequently so you can gradually improve the architecture of your code. Does breaking the web site hurt because deploying that change was difficult to get deployed to production? Maybe you should deploy more frequently so you can automate more of it and reduce the chance for errors. Really the quote has to do with improving the system, not with masochism.",
    "PostAfter": "2015-09-10T09:02:40",
    "DoNotPostAfter": "2015-09-10T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Enker",
    "Channel": "#dev-general",
    "Message": "Curse you Mega Man and your reasonable explanations! :fist_shake:",
    "PostAfter": "2015-09-10T09:03:00",
    "DoNotPostAfter": "2015-09-10T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Working software is the primary measure of progress.\"\r\n- Principles behind the Agile Manifesto",
    "PostAfter": "2015-09-11T08:59:00",
    "DoNotPostAfter": "2015-09-11T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"A Standish Group study found that 45 percent of features in a typical system are never used and 19 percent are rarely used.\"\r\n- Mary Poppendieck",
    "PostAfter": "2015-09-14T09:04:00",
    "DoNotPostAfter": "2015-09-14T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Laziness: The quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful and document what you wrote so you don't have to answer so many questions about it.\"\r\n- Larry Wall, Three Great Virtues of a Programmer",
    "PostAfter": "2015-09-15T09:01:00",
    "DoNotPostAfter": "2015-09-15T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"It is hard to let go of the long-held belief that strong, centralized control provides valuable efficiencies. However well it may have served us in an era of lower complexity and slower technical advances, it now creates barriers that prevent us from adapting quickly to emerging opportunities.\"\r\n- Jez Humble",
    "PostAfter": "2015-09-16T08:59:00",
    "DoNotPostAfter": "2015-09-16T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Facts do not cease to exist because they are ignored.\"\r\n- Aldous Huxley",
    "PostAfter": "2015-09-17T09:04:00",
    "DoNotPostAfter": "2015-09-17T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Dr. Light",
    "Channel": "#dev-general",
    "Message": "Just as long as the facts don't get too negative. Mucking around in a bunch of negativity isn't being an eternal optimist.",
    "PostAfter": "2015-09-17T09:04:30",
    "DoNotPostAfter": "2015-09-17T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "Well, being an eternal optimist isn't about whether we like the facts or not. Being an eternal optimist is about taking all the facts, whether they are negative _or_ positive, and finding the best solution to the problem. Ignoring facts we don't like is not being an eternal optimist.",
    "PostAfter": "2015-09-17T09:04:50",
    "DoNotPostAfter": "2015-09-17T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Never confuse movement with action.\"\r\n- Ernest Hemingway",
    "PostAfter": "2015-09-18T09:00:30",
    "DoNotPostAfter": "2015-09-18T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Are we noted for quality?\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-09-21T09:02:00",
    "DoNotPostAfter": "2015-09-21T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Writing the first 90 percent of a computer program takes 90 percent of the time. The remaining ten percent also takes 90 percent of the time and the final touches also take 90 percent of the time.\"\r\n- N.J. Rubenking",
    "PostAfter": "2015-09-22T09:01:00",
    "DoNotPostAfter": "2015-09-22T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"Simplicity--the art of maximizing the amount of work not done--is essential.\"\r\n- Principles behind the Agile Manifesto",
    "PostAfter": "2015-09-23T09:05:00",
    "DoNotPostAfter": "2015-09-23T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Enker",
    "Channel": "#dev-general",
    "Message": "So that means I just shouldn't ever do anything, right? :troll:",
    "PostAfter": "2015-09-23T09:05:30",
    "DoNotPostAfter": "2015-09-23T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "Another one of the Agile Manifesto principles says, \"Our highest priority is to satisfy the customer.\" If you can satisfy the customer without writing any code, go for it. It's that much less code you will have to write and maintain. Otherwise write the minimum amount of code necessary to solve the customer's problem. That includes both not repeating yourself in code as well as not creating features that you don't actually need.",
    "PostAfter": "2015-09-23T09:05:50",
    "DoNotPostAfter": "2015-09-23T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"It is a mistake to assume that if everybody does his job, it will be all right. The whole system may be in trouble.\"\r\n- W. Edwards Deming",
    "PostAfter": "2015-09-24T09:03:00",
    "DoNotPostAfter": "2015-09-24T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"The Three Laws of TDD:  1) You may not write production code until you have written a failing unit test. 2) You may not write more of a unit test than is sufficient to fail, and not compiling is failing. 3) You may not write more production code than is sufficient to pass the currently failing test.\"\r\n- Robert Martin",
    "PostAfter": "2015-09-25T09:04:00",
    "DoNotPostAfter": "2015-09-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Dr. Light",
    "Channel": "#dev-general",
    "Message": "I almost always write unit tests for my code. TDD is the bomb! :bomb:",
    "PostAfter": "2015-09-25T09:04:30",
    "DoNotPostAfter": "2015-09-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "Do you mean unit tests or TDD?",
    "PostAfter": "2015-09-25T09:04:50",
    "DoNotPostAfter": "2015-09-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Dr. Light",
    "Channel": "#dev-general",
    "Message": "Say what? They're the same thing, right?",
    "PostAfter": "2015-09-25T09:05:20",
    "DoNotPostAfter": "2015-09-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": "No, unit tests and test driven development (TDD) are _not_ the same thing. Unit tests are (usually) automated tests to ensure small pieces of functionality in your code. Test driven development is the process of using tests (often unit tests) to help drive the shape, structure and design of your code. Unit tests can be added to code at any time (with varying degrees of difficulty). In test driven development, the tests you write drive your production code development (hence the name). Consequently, the tests _must_ be written before the code that they will test.",
    "PostAfter": "2015-09-25T09:05:50",
    "DoNotPostAfter": "2015-09-25T10:15:30",
    "Sent": true
  },
  {
    "PostAs": "Mega Man",
    "Channel": "#dev-general",
    "Message": ">\"\"\r\n- ",
    "PostAfter": "2015-09-16T09:04:00",
    "DoNotPostAfter": "2015-09-16T10:15:30",
    "Sent": true
  }
]